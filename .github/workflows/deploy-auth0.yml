name: Deploy Universal Login to Auth0

on:
  push:
    branches:
      - main  # Cambia la rama si usas otra para despliegues

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      AUTH0_DOMAIN: "aqua-turtle-96296.cic-demo-platform.auth0app.com"  # Definir una variable global
      ACCESS_TOKEN: ""  # Inicializar la variable de acceso

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install dependencies
        run: |
          sudo apt-get install curl jq

      - name: Authenticate with Auth0
        run: |
          # Obtén un token de acceso desde la API de Auth0          
          CLIENT_ID="${{ secrets.AUTH0_CLIENT_ID }}"
          echo "Mi clientID es:"
          echo $CLIENT_ID
          CLIENT_SECRET="${{ secrets.AUTH0_CLIENT_SECRET }}"
          echo "Mi clientSecret es:"
          echo $CLIENT_SECRET
          
          RESPONSE=$(curl --request POST \
            --url "https://${AUTH0_DOMAIN}/oauth/token" \
            --header 'content-type: application/json' \
            --data "{\"client_id\":\"${CLIENT_ID}\",\"client_secret\":\"${CLIENT_SECRET}\",\"audience\":\"https://${AUTH0_DOMAIN}/api/v2/\",\"grant_type\":\"client_credentials\"}")
         

          ACCESS_TOKEN=$(echo $RESPONSE | jq -r .access_token)
          echo "ACCESS_TOKEN=${ACCESS_TOKEN}" >> $GITHUB_ENV  # Guardar el token como variable global
          echo "El token es:"
          echo $ACCESS_TOKEN

      - name: Update Universal Login Template
        run: |
          # Aquí se hace el update del Universal Login usando la Auth0 Management API
          TEMPLATE_FILE="templates/universal-login.html"          
          echo "El access token es:"
          echo $ACCESS_TOKEN
          curl --request PUT \
            --url "https://${AUTH0_DOMAIN}/api/v2/branding/templates/universal-login" \
            --header "authorization: Bearer $ACCESS_TOKEN" \
            --header 'content-type: application/json' \
            --data '{"template": "'"$(cat templates/universal-login.html)"'"}'
